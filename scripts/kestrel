#!/usr/bin/env python

# Kestrel: An XMPP-based Job Scheduler
# Author: Lance Stout <lancestout@gmail.com>
#
# Credits: Nathan Fritz <fritzy@netflint.net>
#
# Copyright 2010 Lance Stout
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import sys
import time
import logging
import optparse

from kestrel import __version__
from kestrel.config import load_config
from kestrel.database import Database
from kestrel.worker import Worker
from kestrel.manager import Manager
from kestrel.user import SubmitClient, CancelClient, StatusClient


if __name__ == '__main__':
    opts = optparse.OptionParser(
        usage="Usage: %prog [options] worker|manager|submit <job file>|cancel <job id>|status [pool|<job id>]",
        version='%%prog %s' % __version__)

    opts.add_option('-q','--quiet',
                    help='set logging to ERROR',
                    action='store_const',
                    dest='loglevel',
                    const=logging.ERROR,
                    default=logging.INFO)
    opts.add_option('-d','--debug',
                    help='set logging to DEBUG',
                    action='store_const',
                    dest='loglevel',
                    const=logging.DEBUG,
                    default=logging.INFO)
    opts.add_option('-v','--verbose',
                    help='set logging to COMM',
                    action='store_const',
                    dest='loglevel',
                    const=5,
                    default=logging.INFO)
    opts.add_option('-c', '--config',
                    help=('Alternate location for config file.'),
                    dest='configfile',
                    metavar='FILE',
                    default=None)

    (options, args) = opts.parse_args()

    if len(args) < 1:
        opts.print_help()
        sys.exit(1)

    if options.configfile is None:
        user_roles = ['submit', 'cancel', 'status']
        if args[0] in user_roles:
            options.configfile = '~/.kestrel/user.rc'
        else:
            options.configfile = '~/.kestrel/%s.rc' % args[0]

    conf = load_config(options.configfile)
    logging.basicConfig(level=options.loglevel, format='%(asctime)s %(levelname)-8s %(message)s')

    roles = {'worker': Worker,
             'manager': Manager,
             'submit': SubmitClient,
             'cancel': CancelClient,
             'status': StatusClient}
    role = roles.get(args[0], Worker)

    xmpp = role(conf['XMPP'].get('jid'), conf['XMPP'].get('password'), conf, args)
    xmpp.registerPlugin('xep_0030')

    if xmpp.connect():
        xmpp.process(threaded=False)
        logging.log(logging.INFO, "System disconnecting.")
        xmpp.disconnect()
        logging.log(logging.INFO, "System exiting.")
        sys.exit(0)
    else:
        logging.log(logging.CRITICAL, "Unable to connect.")

